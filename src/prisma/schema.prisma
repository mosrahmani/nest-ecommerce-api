// This is your Prisma schema file,
// learn more about it in the docs https//pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = "postgresql://postgres:admin@localhost:5432/ecommerce"
}

generator client {
  provider = "prisma-client-js"
}

model BaseModel {
  id       Int    @id @default(autoincrement())
  email    String @unique
  password String
}

model User {
  id       String @id @default(uuid())
  email    String @unique
  password String
  carts    Cart[]
}

// Product
model Product {
  id          Int                @id @default(autoincrement())
  title       String
  slug        String             @unique
  quantity    Int
  price       Decimal
  status      productStatus      @default(Available)
  description String
  views       Int?
  created_at  DateTime           @default(now())
  updated_at  DateTime           @updatedAt
  Category    Category?          @relation(fields: [category_id], references: [id])
  category_id Int?
  photos      ProductPhoto[]
  arttibutes  ProductAttribute[]
  cart_items  CartItem[]
}

enum productStatus {
  Soon
  Available
  Unavailable
}

model Category {
  id         Int        @id @default(autoincrement())
  name       String
  slug       String     @unique
  children   Category[] @relation("SubCategories")
  parent     Category?  @relation("SubCategories", fields: [parent_id], references: [id])
  parent_id  Int?
  products   Product[]
  created_at DateTime   @default(now())
  updated_at DateTime   @updatedAt
}

model ProductPhoto {
  id         Int      @id @default(autoincrement())
  url        String
  productId  Int
  product    Product  @relation(fields: [productId], references: [id])
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model ProductAttribute {
  id         Int      @id @default(autoincrement())
  key        String
  value      String
  product    Product  @relation(fields: [productId], references: [id])
  productId  Int
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model Cart {
  id         Int        @id @default(autoincrement())
  user_id    String
  user       User       @relation(fields: [user_id], references: [id])
  items      CartItem[]
  created_at DateTime   @default(now())
  updated_at DateTime   @updatedAt
}

model CartItem {
  cart_id    Int
  product_id Int
  cart       Cart    @relation(fields: [cart_id], references: [id])
  product    Product @relation(fields: [product_id], references: [id])
  quantity   Int

  @@id([cart_id, product_id])
}
